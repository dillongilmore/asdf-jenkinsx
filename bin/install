#!/usr/bin/env bash
#
# refactored from minikube
#

set -e
set -o pipefail

function __jenkinsx_os() {
  uname | tr '[:upper:]' '[:lower:]'
}

function __jenkinsx_filename() {
  echo "jx-$(__jenkinsx_os)-amd64.tar.gz"
}

function __jenkinsx_url() {
  local version="$1"

  echo "https://github.com/jenkins-x/jx/releases/download/v${version}/$(__jenkinsx_filename)"
}

function __jenkinsx_install() {
  local install_type=$1
  local version=$2
  local install_path=$3
  local bin_install_path="${install_path}/bin"
  local binary_path="${bin_install_path}/jx"
  local download_url=$(__jenkinsx_url "${version}")

  if [ "$TMPDIR" = "" ]; then
    local tmp_download_dir="$(mktemp -d -t "jx_${version}")"
  else
    local tmp_download_dir="${TMPDIR}"
  fi

  local download_path="${tmp_download_dir}/$(__jenkinsx_filename)"

  echo "Downloading jx from ${download_url} and extracting"
  curl -L "${download_url}" | tar xzv -C "${tmp_download_dir}"

  echo "Creating bin directory"
  mkdir -p "${bin_install_path}"

  echo "Cleaning previous binaries"
  rm -f $binary_path 2>/dev/null || true

  echo "Copying binary"
  cp "${tmp_download_dir}/jx" "${binary_path}"
  chmod +x $binary_path
}

__jenkinsx_install "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH"
